{
  "swagger": "2.0",
  "info": {
    "title": "Desafio backend",
    "description": "API para controle de funcionarios e projetos",
    "version": "1.0.0"
  },
  "basePath": "/desafio-backend/v1",
  "tags": [
    {
      "name": "Funcionário",
      "description": "Controles para funcionários"
    },
    {
      "name": "Projeto",
      "description": "Controles para projetos"
    },
    {
      "name": "Health",
      "description": "Controles para vida da aplicação"
    }
  ],
  "produces": [
    "application/json"
  ],
  "consumes": [
    "application/json"
  ],
  "paths": {
    "/funcionarios": {
      "post": {
        "summary": "Criar funcionário",
        "operationId": "createFuncionario",
        "description": "Criar funcionário",
        "tags": [
          "Funcionário"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "Novo Funcionario",
            "description": "Informações do novo funcionário para inclusão",
            "schema": {
              "$ref": "#/definitions/Funcionario"
            },
            "required": true
          }
        ],
        "responses": {
          "201": {
            "description": "Created"
          },
          "400": {
            "$ref": "#/responses/400RequisicaoMalFormada"
          },
          "401": {
            "$ref": "#/responses/401NaoAutorizado"
          },
          "403": {
            "$ref": "#/responses/403NaoPermitido"
          },
          "500": {
            "$ref": "#/responses/500ErroInternoServidor"
          },
          "501": {
            "$ref": "#/responses/501NaoImplementado"
          }
        }
      },
      "get": {
        "summary": "Buscar todos funcionários cadastrados",
        "operationId": "searchFuncionario",
        "description": "Buscar todos os funcionários cadastrados",
        "tags": [
          "Funcionário"
        ],
        "responses": {
          "200": {
            "description": "Sucesso",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Funcionario"
              }
            }
          },
          "400": {
            "$ref": "#/responses/400RequisicaoMalFormada"
          },
          "401": {
            "$ref": "#/responses/401NaoAutorizado"
          },
          "403": {
            "$ref": "#/responses/403NaoPermitido"
          },
          "500": {
            "$ref": "#/responses/500ErroInternoServidor"
          },
          "501": {
            "$ref": "#/responses/501NaoImplementado"
          }
        }
      }
    },
    "/funcionarios/{id}": {
      "get": {
        "summary": "Buscar funcionário pelo identificador",
        "operationId": "searchFuncionarioById",
        "description": "Buscar funcionário pelo identificador",
        "tags": [
          "Funcionário"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Id do funcionário",
            "type": "integer",
            "format": "long",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Sucesso",
            "schema": {
              "$ref": "#/definitions/Funcionario"
            }
          },
          "400": {
            "$ref": "#/responses/400RequisicaoMalFormada"
          },
          "401": {
            "$ref": "#/responses/401NaoAutorizado"
          },
          "403": {
            "$ref": "#/responses/403NaoPermitido"
          },
          "404": {
            "$ref": "#/responses/404NaoEncontrado"
          },
          "500": {
            "$ref": "#/responses/500ErroInternoServidor"
          },
          "501": {
            "$ref": "#/responses/501NaoImplementado"
          }
        }
      },
      "put": {
        "summary": "Atualizar funcionário",
        "operationId": "updateFuncionario",
        "description": "Atualizar funcionário",
        "tags": [
          "Funcionário"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Id do funcionário",
            "type": "integer",
            "format": "long",
            "required": true
          },
          {
            "in": "body",
            "name": "Funcionario",
            "description": "Informações do funcionário para atualização",
            "schema": {
              "$ref": "#/definitions/Funcionario"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Sucesso",
            "schema": {
              "$ref": "#/definitions/Funcionario"
            }
          },
          "400": {
            "$ref": "#/responses/400RequisicaoMalFormada"
          },
          "401": {
            "$ref": "#/responses/401NaoAutorizado"
          },
          "403": {
            "$ref": "#/responses/403NaoPermitido"
          },
          "404": {
            "$ref": "#/responses/404NaoEncontrado"
          },
          "500": {
            "$ref": "#/responses/500ErroInternoServidor"
          },
          "501": {
            "$ref": "#/responses/501NaoImplementado"
          }
        }
      }
    },
    "/projetos": {
      "post": {
        "summary": "Criar projeto",
        "operationId": "createProjeto",
        "description": "Criar projeto",
        "tags": [
          "Projeto"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "Novo Projeto",
            "description": "Informações do novo projeto para inclusão.",
            "schema": {
              "$ref": "#/definitions/Projeto"
            },
            "required": true
          }
        ],
        "responses": {
          "201": {
            "description": "Created"
          },
          "400": {
            "$ref": "#/responses/400RequisicaoMalFormada"
          },
          "401": {
            "$ref": "#/responses/401NaoAutorizado"
          },
          "403": {
            "$ref": "#/responses/403NaoPermitido"
          },
          "500": {
            "$ref": "#/responses/500ErroInternoServidor"
          },
          "501": {
            "$ref": "#/responses/501NaoImplementado"
          }
        }
      },
      "get": {
        "summary": "Buscar todos projetos cadastrados",
        "operationId": "searchProjeto",
        "description": "Buscar todos os projetos cadastrados.",
        "tags": [
          "Projeto"
        ],
        "responses": {
          "200": {
            "description": "Sucesso",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Projeto"
              }
            }
          },
          "400": {
            "$ref": "#/responses/400RequisicaoMalFormada"
          },
          "401": {
            "$ref": "#/responses/401NaoAutorizado"
          },
          "403": {
            "$ref": "#/responses/403NaoPermitido"
          },
          "500": {
            "$ref": "#/responses/500ErroInternoServidor"
          },
          "501": {
            "$ref": "#/responses/501NaoImplementado"
          }
        }
      }
    },
    "/projetos/{id}": {
      "get": {
        "summary": "Buscar projeto pelo identificador",
        "operationId": "searchProjetoById",
        "description": "Buscar projeto pelo identificador.",
        "tags": [
          "Projeto"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Id do projeto",
            "type": "integer",
            "format": "long",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Sucesso",
            "schema": {
              "$ref": "#/definitions/Projeto"
            }
          },
          "400": {
            "$ref": "#/responses/400RequisicaoMalFormada"
          },
          "401": {
            "$ref": "#/responses/401NaoAutorizado"
          },
          "403": {
            "$ref": "#/responses/403NaoPermitido"
          },
          "404": {
            "$ref": "#/responses/404NaoEncontrado"
          },
          "500": {
            "$ref": "#/responses/500ErroInternoServidor"
          },
          "501": {
            "$ref": "#/responses/501NaoImplementado"
          }
        }
      },
      "put": {
        "summary": "Atualizar projeto",
        "operationId": "updateProjeto",
        "description": "Atualizar projeto",
        "tags": [
          "Projeto"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Id do projeto",
            "type": "integer",
            "format": "long",
            "required": true
          },
          {
            "in": "body",
            "name": "Projeto",
            "description": "Informações do projeto para atualização.",
            "schema": {
              "$ref": "#/definitions/Projeto"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Sucesso",
            "schema": {
              "$ref": "#/definitions/Projeto"
            }
          },
          "400": {
            "$ref": "#/responses/400RequisicaoMalFormada"
          },
          "401": {
            "$ref": "#/responses/401NaoAutorizado"
          },
          "403": {
            "$ref": "#/responses/403NaoPermitido"
          },
          "404": {
            "$ref": "#/responses/404NaoEncontrado"
          },
          "500": {
            "$ref": "#/responses/500ErroInternoServidor"
          },
          "501": {
            "$ref": "#/responses/501NaoImplementado"
          }
        }
      }
    },
    "/health": {
      "get": {
        "summary": "Verificar vida da aplicação",
        "operationId": "getHealth",
        "description": "Detalhes sobre o estado da aplicação",
        "tags": [
          "Health"
        ],
        "parameters": [ ],
        "responses": {
          "200": {
            "description": "Sucesso",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "description": "Estado da aplicação"
                }
              },
              "example": {
                "status": "UP"
              }
            }
          },
          "401": {
            "$ref": "#/responses/401NaoAutorizado"
          },
          "403": {
            "$ref": "#/responses/403NaoPermitido"
          },
          "500": {
            "$ref": "#/responses/500ErroInternoServidor"
          },
          "501": {
            "$ref": "#/responses/501NaoImplementado"
          }
        }
      }
    }
  },
  "responses": {
    "200Sucesso": {
      "description": "Sucesso"
    },
    "201Criado": {
      "description": "Criado"
    },
    "202Aceito": {
      "description": "Aceito"
    },
    "204SemConteudo": {
      "description": "Sem conteúdo"
    },
    "400RequisicaoMalFormada": {
      "description": "Algum parâmetro informado está inválido",
      "schema": {
        "allOf": [
          {
            "$ref": "#/definitions/ApiError"
          },
          {
            "example": {
              "httpStatus": "BAD_REQUEST"
            }
          }
        ]
      }
    },
    "401NaoAutorizado": {
      "description": "Não autorizado",
      "schema": {
        "allOf": [
          {
            "$ref": "#/definitions/ApiError"
          },
          {
            "example": {
              "httpStatus": "UNAUTHORIZED"
            }
          }
        ]
      }
    },
    "403NaoPermitido": {
      "description": "Não permitido",
      "schema": {
        "allOf": [
          {
            "$ref": "#/definitions/ApiError"
          },
          {
            "example": {
              "httpStatus": "FORBIDDEN"
            }
          }
        ]
      }
    },
    "404NaoEncontrado": {
      "description": "O recurso solicitado não foi encontrado",
      "schema": {
        "allOf": [
          {
            "$ref": "#/definitions/ApiError"
          },
          {
            "example": {
              "httpStatus": "NOT_FOUND"
            }
          }
        ]
      }
    },
    "405MetodoNaoPermitido": {
      "description": "Método não permitido",
      "schema": {
        "allOf": [
          {
            "$ref": "#/definitions/ApiError"
          },
          {
            "example": {
              "httpStatus": "METHOD_NOT_ALLOWED"
            }
          }
        ]
      }
    },
    "406NaoAceito": {
      "description": "Não aceito",
      "schema": {
        "allOf": [
          {
            "$ref": "#/definitions/ApiError"
          },
          {
            "example": {
              "httpStatus": "NOT_ACCEPTABLE"
            }
          }
        ]
      }
    },
    "422EntidadeNaoProcessavel": {
      "description": "Entidade Não Processável",
      "schema": {
        "allOf": [
          {
            "$ref": "#/definitions/ApiError"
          },
          {
            "example": {
              "httpStatus": "UNPROCESSABLE_ENTITY"
            }
          }
        ]
      }
    },
    "500ErroInternoServidor": {
      "description": "Erro não identificado",
      "schema": {
        "allOf": [
          {
            "$ref": "#/definitions/ApiError"
          },
          {
            "example": {
              "httpStatus": "INTERNAL_SERVER_ERROR"
            }
          }
        ]
      }
    },
    "501NaoImplementado": {
      "description": "Não implementado",
      "schema": {
        "allOf": [
          {
            "$ref": "#/definitions/ApiError"
          },
          {
            "example": {
              "httpStatus": "NOT_IMPLEMENTED"
            }
          }
        ]
      }
    }
  },
  "definitions": {
    "ApiError": {
      "type": "object",
      "title": "Erro da requisição",
      "description": "Informações sobre o erro da requisição",
      "properties": {
        "codigo": {
          "type": "string",
          "description": "Código do erro"
        },
        "mensagem": {
          "type": "string",
          "description": "Mensagem do erro"
        },
        "dataHora": {
          "type": "string",
          "format": "date-time",
          "description": "Data e hora da ocorrência do erro"
        },
        "httpStatus": {
          "type": "string",
          "format": "HttpStatus",
          "description": "Código de status http do erro"
        },
        "erros": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Lista de mensagens do erro"
        }
      },
      "required": [
        "codigo",
        "mensagem",
        "timestamp",
        "httpStatus"
      ],
      "example": {
        "codigo": "001A",
        "mensagem": "Ocorreu um erro.",
        "dataHora": "2023-03-28T22:35:10.123-03:00",
        "httpStatus": "INTERNAL_SERVER_ERROR",
        "erros": [
          "Detalhe 01 do erro.",
          "Detalhe 02 do erro."
        ]
      }
    },
    "Funcionario": {
      "type": "object",
      "title": "Dados do funcionário",
      "description": "Informações sobre o funcionário",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64",
          "example": "1",
          "description": "Identificador do funcionário",
          "readOnly": true
        },
        "nome": {
          "type": "string",
          "format": "string",
          "example": "Ricardo Carvalho Agostinho",
          "description": "Nome do funcionário"
        },
        "cpf": {
          "type": "string",
          "format": "string",
          "example": "12345678901",
          "pattern": "^[0-9]{11}$",
          "description": "O CPF do funcionário (apenas números)"
        },
        "email": {
          "type": "string",
          "format": "email",
          "example": "email@teste.com",
          "description": "E-mail do funcionário"
        },
        "salario": {
          "type": "number",
          "format": "BigDecimal",
          "example": "1000.00",
          "description": "Salário do funcionário"
        },
        "projetos": {
          "type": "array",
          "readOnly": true,
          "items": {
            "$ref": "#/definitions/Projeto"
          },
          "description": "Projetos nos quais o funcionário esta envolvido"
        }
      }
    },
    "Projeto": {
      "type": "object",
      "title": "Dados do projeto",
      "description": "Informações sobre o projeto",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64",
          "example": "1",
          "description": "Identificador do projeto",
          "readOnly": true
        },
        "nome": {
          "type": "string",
          "format": "string",
          "example": "Projeto 01",
          "description": "Nome do projeto"
        },
        "dataCriacao": {
          "type": "string",
          "format": "date",
          "example": "2020-01-01",
          "description": "Data de criação do projeto"
        },
        "funcionarios": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/FuncionarioProjeto"
          },
          "description": "Funcionários envolvidos no projeto"
        }
      }
    },
    "FuncionarioProjeto": {
      "type": "object",
      "title": "Dados do funcionário",
      "description": "Informações sobre o funcionário",
      "properties": {
        "id": {
          "type": "number",
          "format": "long",
          "example": "1",
          "description": "Identificador do funcionário"
        },
        "nome": {
          "type": "string",
          "format": "string",
          "example": "Ricardo Carvalho Agostinho",
          "description": "Nome do funcionário"
        },
        "cpf": {
          "type": "string",
          "format": "string",
          "example": "12345678901",
          "pattern": "^[0-9]{11}$",
          "description": "O CPF do funcionário (apenas números)"
        },
        "email": {
          "type": "string",
          "format": "email",
          "example": "email@teste.com",
          "description": "E-mail do funcionário"
        },
        "salario": {
          "type": "number",
          "format": "BigDecimal",
          "example": "1000.00",
          "description": "Salário do funcionário"
        }
      }
    }
  },
  "x-interceptors": {
    "1": {
      "x-interceptor-position": 1,
      "x-interceptor-type": "OAUTH",
      "x-interceptor-content": "{\"location\":\"HEADER_OR_COOKIE\",\"name\":\"Sensedia-Auth\",\"grantTypes\":[\"CLIENT_CREDENTIALS\"],\"ignoreBodyValidationMultiPartFormData\":false}",
      "x-interceptor-execution-point": "FIRST",
      "x-interceptor-status": "REFERENCE"
    },
    "2": {
      "x-interceptor-position": 2,
      "x-interceptor-type": "LOG",
      "x-interceptor-content": "{\"acceptedTerms\":true,\"encryptContent\":false,\"encryptPathAndParameters\":false,\"ignoreBodyValidationMultiPartFormData\":false}",
      "x-interceptor-execution-point": "FIRST",
      "x-interceptor-status": "REFERENCE"
    },
    "3": {
      "x-interceptor-position": 3,
      "x-interceptor-type": "SQL_THREAT_PROTECTION",
      "x-interceptor-content": "{\"sqlThreatProtectionHeaders\":true,\"sqlThreatProtectionQueryParams\":true,\"sqlThreatProtectionBody\":true,\"sqlThreatProtectionCookies\":true,\"sqlThreatProtectionPathParams\":true,\"ignoreBodyValidationMultiPartFormData\":false}",
      "x-interceptor-execution-point": "FIRST",
      "x-interceptor-status": "REFERENCE"
    },
    "4": {
      "x-interceptor-position": 4,
      "x-interceptor-type": "XSS_THREAT_PROTECTION",
      "x-interceptor-content": "{\"regexList\":[{\"URI_PATH\":\"((\\\\%3C)|<)[^\\\\n]+((\\\\%3E)|>)\"},{\"QUERY_PARAM\":\"((\\\\%3C)|<)[^\\\\n]+((\\\\%3E)|>)\"},{\"HEADER\":\"((\\\\%3C)|<)[^\\\\n]+((\\\\%3E)|>)\"},{\"BODY\":\"((\\\\%3C)|<)[^\\\\n]+((\\\\%3E)|>)\"}],\"ignoreBodyValidationMultiPartFormData\":false}",
      "x-interceptor-execution-point": "FIRST",
      "x-interceptor-status": "REFERENCE"
    },
    "5": {
      "x-interceptor-position": 5,
      "x-interceptor-type": "HEADER",
      "x-interceptor-content": "{\"headerList\":[{\"name\":\"X-API-KEY\",\"tokenType\":\"APP\",\"attribute\":\"X-API-KEY\"}],\"ignoreBodyValidationMultiPartFormData\":false}",
      "x-interceptor-execution-point": "FIRST",
      "x-interceptor-status": "REFERENCE"
    },
    "6": {
      "x-interceptor-position": 6,
      "x-interceptor-type": "LOG",
      "x-interceptor-content": "{\"acceptedTerms\":true,\"encryptContent\":false,\"encryptPathAndParameters\":false,\"ignoreBodyValidationMultiPartFormData\":false}",
      "x-interceptor-execution-point": "SECOND",
      "x-interceptor-status": "REFERENCE"
    }
  },
  "x-resources": {
    "/funcionarios": {
      "x-resource-description": null,
      "x-destination": null,
      "x-interceptors": { },
      "x-timeout": null,
      "x-api-broken": false
    },
    "/projetos": {
      "x-resource-description": null,
      "x-destination": null,
      "x-interceptors": { },
      "x-timeout": null,
      "x-api-broken": false
    },
    "/health": {
      "x-resource-description": null,
      "x-destination": null,
      "x-interceptors": { },
      "x-timeout": null,
      "x-api-broken": false
    }
  },
  "x-destination": null,
  "x-api-broken": false,
  "x-timeout": null,
  "x-access-token-expires-in": null,
  "x-life-cycle": null
}